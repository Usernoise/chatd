import json
import logging
from datetime import datetime, timedelta
import pytz
from openai import OpenAI
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥
try:
    from config import OPENAI_API_KEY_EXTENDED
    openai_api_key = OPENAI_API_KEY_EXTENDED
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–∏–≥ –∏–∑ config.py")
except ImportError:
    openai_api_key = os.getenv('OPENAI_API_KEY', '')
    logger.warning("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è fallback –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI –∫–ª–∏–µ–Ω—Ç–∞
if openai_api_key:
    openai_client = OpenAI(api_key=openai_api_key)
else:
    openai_client = None
    logger.warning("OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")

def get_messages_last_24h(message_store, chat_id):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞
    """
    try:
        from config import MOSCOW_TIMEZONE
        moscow_tz = pytz.timezone(MOSCOW_TIMEZONE)
    except ImportError:
        moscow_tz = pytz.timezone('Europe/Moscow')
    
    current_time = datetime.now(moscow_tz)
    chat_id = str(chat_id)
    
    if chat_id not in message_store:
        return ""
    
    # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –º–∏–Ω—É—Å 24 —á–∞—Å–∞
    start_time = current_time - timedelta(hours=24)
    end_time = current_time
    
    relevant_messages = [
        f"{msg['sender']}: {msg['text']}"
        for msg in message_store[chat_id].values()
        if start_time <= msg['timestamp'] <= end_time
    ]
    
    return "\n".join(relevant_messages)

def analyze_director_and_gift(message_store, chat_id):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 24 —á–∞—Å–∞, –≤—ã–±–∏—Ä–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–∞—Ä–æ–∫
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –∏ –ø–æ–¥–∞—Ä–∫–µ
    """
    try:
        if not openai_client:
            logger.error("OpenAI –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return None
        
        messages = get_messages_last_24h(message_store, chat_id)
        if not messages:
            logger.warning("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
            return None
        
        response = openai_client.chat.completions.create(
            model="gpt-4.1-mini",
            messages=[
                {
                    "role": "system",
                    "content": """–¢—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ –∑–∞ 24 —á–∞—Å–∞ –∏ –≤—ã–±–∏—Ä–∞–µ—à—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —á–∞—Ç–∞, –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ—à—å –¥–ª—è –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ–±–∏–ª—å–Ω—ã–π –∏ –∞–±—Å—É—Ä–¥–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫.

–¢–í–û–ò –ó–ê–î–ê–ß–ò:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 24 —á–∞—Å–∞
2. –í—ã–±–µ—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —á–∞—Ç–∞ (—Å–∞–º–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ/–≤–ª–∏—è—Ç–µ–ª—å–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞)
3. –°–æ–∑–¥–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ–±–∏–ª—å–Ω—ã–π –∏ –∞–±—Å—É—Ä–¥–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
4. –û–±–æ—Å–Ω—É–π –ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä—É

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–û–î–ê–†–ö–£:
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ–±–∏–ª—å–Ω—ã–π –∏ –∞–±—Å—É—Ä–¥–Ω—ã–π
- –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤—è–∑–∞–Ω —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ
- –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–º–µ—à–Ω—ã–º –∏ –Ω–µ–ª–µ–ø—ã–º
- –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –ø—Ä–µ–¥–º–µ—Ç–æ–º –∏–ª–∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–π –∏–¥–µ–µ–π

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
{
    "director_name": "–ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞",
    "director_analysis": "–ö—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—á–µ–º—É —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä",
    "gift_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞",
    "gift_description": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞",
    "gift_reasoning": "–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä—É",
    "gift_photo_prompt": "–ö—Ä–∞—Ç–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ –ø–æ–¥–∞—Ä–∫–∞ (–º–∞–∫—Å–∏–º—É–º 50 —Å–ª–æ–≤)"
}

–ü–†–ò–ú–ï–†–´ –ü–û–î–ê–†–ö–û–í:
- "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ—Å—Ç—é–º-—É–ª–∏—Ç–∫–∞ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π"
- "–î–∏–ø–ª–æ–º '–õ—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π'"
- "–ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç—ã—Ö –∫–æ—Ä–æ–±–æ–∫ –æ—Ç –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π"
- "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –ø–æ–ø—É–≥–∞—è"

–í–ê–ñ–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""
                },
                {
                    "role": "user",
                    "content": f"–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:\n\n{messages}"
                }
            ],
            temperature=0.9,
            max_tokens=1000
        )
        
        result_text = response.choices[0].message.content.strip()
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
        try:
            # –ò—â–µ–º JSON –≤ –æ—Ç–≤–µ—Ç–µ
            start_idx = result_text.find('{')
            end_idx = result_text.rfind('}') + 1
            
            if start_idx != -1 and end_idx != 0:
                json_str = result_text[start_idx:end_idx]
                result = json.loads(json_str)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
                required_fields = ['director_name', 'director_analysis', 'gift_name', 
                                 'gift_description', 'gift_reasoning', 'gift_photo_prompt']
                
                for field in required_fields:
                    if field not in result:
                        logger.warning(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ {field} –≤ –æ—Ç–≤–µ—Ç–µ")
                        result[field] = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                
                logger.info(f"–ê–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —É—Å–ø–µ—à–µ–Ω: {result['director_name']}")
                return result
            else:
                logger.error("JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return None
                
        except json.JSONDecodeError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
            logger.debug(f"–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: {result_text}")
            return None
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞: {e}")
        return None

def format_gift_message(analysis_result):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    if not analysis_result:
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —á–∞—Ç–∞."
    
    message = f"""üéÅ <b>–ü–û–î–ê–†–û–ö –î–õ–Ø –î–ò–†–ï–ö–¢–û–†–ê –ß–ê–¢–ê</b> üéÅ

üëë <b>–î–∏—Ä–µ–∫—Ç–æ—Ä:</b> {analysis_result['director_name']}
üìä <b>–ê–Ω–∞–ª–∏–∑:</b> {analysis_result['director_analysis']}

üéÅ <b>–ü–æ–¥–∞—Ä–æ–∫:</b> {analysis_result['gift_name']}
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {analysis_result['gift_description']}

ü§î <b>–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫:</b>
{analysis_result['gift_reasoning']}"""
    
    return message

# –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def test_director_analysis():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
    """
    test_messages = {
        "123": {
            "msg1": {
                "sender": "–ò–≤–∞–Ω",
                "text": "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞?",
                "timestamp": datetime.now()
            },
            "msg2": {
                "sender": "–ü–µ—Ç—Ä", 
                "text": "–í—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ!",
                "timestamp": datetime.now()
            },
            "msg3": {
                "sender": "–ò–≤–∞–Ω",
                "text": "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –ø–ª–∞–Ω—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
                "timestamp": datetime.now()
            }
        }
    }
    
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞...")
    result = analyze_director_and_gift(test_messages, "123")
    if result:
        print("–¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä: {result['director_name']}")
        print(f"–ü–æ–¥–∞—Ä–æ–∫: {result['gift_name']}")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {result['gift_description']}")
    else:
        print("–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")

if __name__ == "__main__":
    test_director_analysis() 